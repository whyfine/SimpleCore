<#@ template language="C#" debug="false" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.Reflection" #>
<#+ 
    string EntityNamespace="";
    string EntityParamterNamespace="";
	string BusinessNamespace="";
	string DataAccessNamespace="";
    string EntityOutputFileFolder="";
    string BusinessOutputFileFolder="";
    List<Type> Types;
    List<Type> LoadTypes(string typeNamespace)
	{
		return Assembly.LoadFrom(Host.ResolvePath("..\\bin\\Debug\\SimpleCore.dll")).GetExportedTypes().Where(t => t.IsClass && t.Namespace.Equals(typeNamespace,StringComparison.OrdinalIgnoreCase)).ToList();
	}
	void SaveOutput(string outputFileName,string utputFileFolder)
    {
        // Write to destination folder

		string outputPath=Host.ResolvePath(utputFileFolder);
		string outputFilePath = Path.Combine(outputPath, outputFileName);
        File.Delete(outputFilePath);
        File.WriteAllText(outputFilePath, this.GenerationEnvironment.ToString()); 
 
        // Flush generation
        this.GenerationEnvironment.Remove(0, this.GenerationEnvironment.Length);
    }
#>