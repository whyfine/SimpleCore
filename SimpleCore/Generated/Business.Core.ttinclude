<#@ template language="C#" debug="false" hostSpecific="true" #>
<#@ Assembly Name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.ComponentModel" #>
<#+ 
    string EntityNamespace="";
	string EntityParamterNamespace="";
    string DataAccessNamespace="";
	string BusinessNamespace="";
    List<Type> Types;
    List<Type> LoadTypes(string typeNamespace)
	{
		return Assembly.LoadFrom(Host.ResolvePath("..\\bin\\Debug\\SimpleCore.dll")).GetExportedTypes().Where(t => t.IsClass && t.Namespace.Equals(typeNamespace,StringComparison.OrdinalIgnoreCase)).ToList();
	}
	string DefaultStringByType(Type t)
	{
		if(t.Equals(typeof(Nullable<int>))||t.Equals(typeof(Nullable<long>))||	t.Equals(typeof(Nullable<decimal>))||t.Equals(typeof(Nullable<double>))|| t.Equals(typeof(Nullable<Int16>))||t.Equals(typeof(Nullable<Int32>))|| t.Equals(typeof(Nullable<Int64>)))
		{
			return "0";
		}
		else if(t.Equals(typeof(Nullable<bool>)))
		{
			return "false";
		}
		else if(t.Equals(typeof(Nullable<DateTime>)))
		{
			return "DateTime.Now";
		}
		else if(t.Equals(typeof(string)))
		{
			return "string.Empty";
		}
		else
		{
			return "null";
		}
	}
	string CheckIsNullString(Type t)
    {
		if(t.Equals(typeof(Nullable<int>))||t.Equals(typeof(Nullable<long>))||	t.Equals(typeof(Nullable<decimal>))||t.Equals(typeof(Nullable<double>))|| t.Equals(typeof(Nullable<Int16>))||t.Equals(typeof(Nullable<Int32>))|| t.Equals(typeof(Nullable<Int64>))||t.Equals(typeof(Nullable<bool>))||t.Equals(typeof(Nullable<DateTime>)))
		{
			return ".HasValue";
		}
		else if(t.Equals(typeof(string)))
		{
			return "!=null";
		}
		else
		{
			return "!=null";
		}
	}
	string GetValueByType(Type t)
    {
		if(t.Equals(typeof(Nullable<int>))||t.Equals(typeof(Nullable<long>))||	t.Equals(typeof(Nullable<decimal>))||t.Equals(typeof(Nullable<double>))|| t.Equals(typeof(Nullable<Int16>))||t.Equals(typeof(Nullable<Int32>))|| t.Equals(typeof(Nullable<Int64>))||t.Equals(typeof(Nullable<bool>))||t.Equals(typeof(Nullable<DateTime>)))
		{
			return ".Value";
		}
		else if(t.Equals(typeof(string)))
		{
			return "";
		}
		else
		{
			return "";
		}
	}
#>